package com.cg.fms.Service;

import static org.assertj.core.api.Assertions.assertThat;
import static org.hamcrest.CoreMatchers.is;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;

import java.util.List;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import com.cg.fms.dao.AdminDao;
import com.cg.fms.dto.Admin;
import com.cg.fms.exception.AdminException;
import com.cg.fms.service.AdminServiceImpl;

@ExtendWith(MockitoExtension.class)
public class AdminTest {
	@Mock
	private AdminDao repo;
	@InjectMocks
	AdminServiceImpl service;

	
	
	@Test
	@DisplayName("PackageServiceImpl::getByCode should return exeisting package as PackageModel given existing packageCode")
	void testGetByCode() {
		
		Admin testdata =  new PackageEntity("P01","Pack1", "Pack1", 100.0);
		 expected = new PackageModel("P01","Pack1", "Pack1", 100.0);
		
		Mockito.when(repo.findById(testdata.getPackageCode()))
		.thenReturn(Optional.of(testdata));
		
		PackageModel actual = psImpl.getByCode(testdata.getPackageCode());
		assertEquals(expected, actual);
	}
}
